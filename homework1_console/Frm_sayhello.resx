<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAYGBgYGBgcICAcKCgkKCg4NDAwNDhUPEA8QDxUgFBgUFBgU
        IB0jHBocIx0zKCQkKDM7Mi8yO0hAQEhaVlp2dp//2wBDAQYGBgYGBgcICAcKCgkKCg4NDAwNDhUPEA8Q
        DxUgFBgUFBgUIB0jHBocIx0zKCQkKDM7Mi8yO0hAQEhaVlp2dp//wgARCAHeA1IDASEAAhEBAxEB/8QA
        HAABAAEFAQEAAAAAAAAAAAAAAAIBAwQGBwUI/9oACAEBAAAAAPqkAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMax6A0HergAAAAAAAAAAAAAAAByD3PU29xLrHM+wgAAAAAAAAAAAAAAANP9H3+T9Y5vu/o8n6wAAAA
        AAAAAAAAAAAA5Z1Np2fo/WnLuogAAAAAAAAAAAAAAAOWdTOU2euOU9WAAAAAAAAAAAAAAAAcu6icntdd
        cj64AAAAAAAAAAAAAAAA8nXN5fOO2di8jT+jgAAAAAAAAAAAAAAANFrvIaLXeQAAAAAAAAAAAAAAANPl
        twGntwAAAAAAAAAAAAAAABynqwBy3qQAAAAAAAAAAAAAAAU5f1EA5f0+oAAAAAAAAAAAAAAAwdS3vzPS
        qPK9XmXTQAAAAAAAAAAAAAAAx9B6N8/d1zDxeQd55d1EAAAAAAAAAAAAAAAHLOpgHJetAAAAAAAAAAAA
        AAAA1DE3pzvl/wBKKcgwO3gAAAAAAAAAAAAAAA+X/H37ed1zMHnvOvCx/oLeAAAAAAAAAAAAAAABzfjN
        x5efgZObFXc+7AAAAAAAAAAAAABqUJxVQuZF3kOqxeL9W6vw+6WNh6dft2rGNEqVv2JylVk+hkQt+di1
        RhC/jEoksmNuE5qpwyb+XK/atWMbGEKwgu0hAqhOiXjokqwpbty53bU7PZ4rledmbTvliauTelOCqzG7
        GqK3iW13Ku0kpW1cuqJRjZTuQqpWFYWrELdyV+9OkxSUYLsp26q1W0wAV8S75Wfe1nA6fCIAAAAAAAAA
        AAAAAAS8nwMZSWTj4HSqAAAAAAAAAAAAAAABodPZ2G8Qt3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf/xAAbAQEA
        AgMBAQAAAAAAAAAAAAAAAQYCAwUEB//aAAgBAhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANOWwAAAAAAAFL
        svvwonXs4AAAAAAAR8k3/UqXVrVdgAAAAAAAx+R+j6tQa7c7aESABEgAAQn4FKNmyz9S9U7k1XnRqwM4
        Ts26tQxRmiUzunDUgywicZeYHt7164HzzGAAAACUAABPq7mev1VCAAAAAAAA7Xq4OGeOsAAAAAAAEoAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB//xAAbAQEAAgMBAQAAAAAAAAAAAAAAAQIDBQYE
        B//aAAgBAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM0YgAAAAAAAd1y2uv9B03KAAAAAAABP2PB8n7jquT
        4QAAAAAAALfZPN8i+h9JxPHAAAAAAA6uJRXfYOA6fodKmZImEVmyYtE1BEVtYTEkozAw+PUevdXkAAAA
        AAAMPkrbFtZAAAAAAADx4vZatrgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/
        xABTEAABAwIDAwYIBwwIBAcAAAABAgMEAAUGBxESITETFnGU0dIQFzJBUWCTwRQiJFNVYYIVIyYwUlRW
        ZIGSsbIgJUNicoSRwnN0oaI1REVGkLCz/9oACAEBAAE/AP8A7dmfcYFrjLkzpjESMjTaefcS0gE8AVKq
        13+z35hb1suUSa0g6LMd1LgQfQrTh/QUQkampGa2XsWcIbuJYnLa6fE2ltjpcSCgVGlMTGWno7zbzLid
        pDjagtCh6QRqCPWM1aIMfMbEc6+XFpEmw2x9cO0RXRttPuo3PS1g7l+hFYhy8hOvJueHlNWW/MDVmVHQ
        G23fS3JQnctCqwZi1d/jzos2H8AvVtdDFxhk67CvM436Wl8Unwuvzc2rtKhRZLsbB0JwtSXmTsLujw4t
        oPzIqLYLJDtv3NjWuI1A2SkxgyktkK47QPHWsNM8w8wZWFmNsWe7xTcrc15oz6NzrKSfWPMO8838E4iu
        AJDiISmmiOIdkfekEdBVWELO1h7C9ktaUBJiQmkLGmmrpG04f2qPgxmzzaxjhXFTOqGn3xaLmEaAOMyN
        eSWv6kK8GaN4mw8Ot2u2q0ul9lN22IeGxy3lrrD1hg4es8C2Q0BESGyG0D0nipR+tR3nwZmARL/lzcwk
        6sYiRE1+qYKTw9Ys3FcvbMO2vY2kXXElviup9LW1tmh7/BmPaEX7BGIoextrMFx5oDiXWPvqNKwXeziH
        C1juizq7JgtKd/4oGyv/AKirwly55yYXinVce02aRcVJ9C3yWQaHgzXAMDCQ03nFtspPn6T6xZnHYn5f
        ObtOdsJNDwKAPEaismi4zgtcBa9fuZdJ0PoCHNusPfKM5Mfu/m0C2x0dDiErI8OYYMzFeWttCjo7elzC
        j0iCgL1NDh6xZwtFvCTV1AO3ZbtAuCPsObH++mlocQFoUFIUNpKhvBB3g+A1lQhUdnG8U8GMWz0orBuh
        zSzPXsbPxrYkey8B3VBd5xZwXKS2vWLhu1ph/wCalHVXrHiaxs4gw/dbU8BpNiOtDUa7CyNUL6UmssL2
        u94Gsb7xIkssmI+D5QcjHkjr4DWGsfWPCV7x2xOi3Zbj+JJburMYuoQistJ0C/YqzBv0DbXCmyICGXXG
        1Nklpn448GJ75EwzYLndpB1ahMFwj8pfBCPtKIFZU2V+04SYlS0aXC7vuXOX/jk70j1jxPjcWmc1ZrTA
        Vdr++ApuE2dEMo+dkL4IRWAMLXDClpmsz5jMmZPuT0+RyCSGW3HtAUN7W8jw7NJSEDQADeT+0+DMfB8z
        GNgTCizkMOsykSUodBMeQWuDTwG/YrCmOGrvMesd0gm0X6MNXoK96XED+0jr4LR6xY5xO9hmzgw4/wAJ
        us15MS2xvnZDnAn+4jiawdhNvDEF5T8gzLvNWHrlOVvU+73EcEj8RjDCEbFERtbb3wO7wiHLfPQNHGHR
        /FB4KFYGxRJxHZ1onsoj3e3vriXOON2w+3u2h/dXxHrAd1QQrE2alzku74mFYyYsQemXNRq659kbvxVy
        QMN5qWWY2hQj4lhuwJfmQJMQBbLh9KyPi+sCyEjUnQDeT0Vk8BKwu/dztbd6u864L2/NtOFsfy/is30L
        ZwvEuaXNg2i9W+d06Ocj/voer+JHixh68voPxmrfJWjpS2aysYRFy+wuhs7jAS59p0lZ8F1xBZLCI5ud
        yiww+vYaL7gb21fVrQOv9BxxDSFLWoJQkEqUToABvJJqyYosGI0yF2m5x5qWFhDpZVqEE+DOvTxZ4j/y
        YHWUUgkp1I0JA9X7lFEy3zIqgCJEd1og+haCmso5Zk5e4e29rlGGnYy0niksOqRp4M6Ms8T40utmm2hL
        TqGoxjutOOhvkvjlfK1aYirdbIEMvF0xYrLBdPFfJICdo/Wf6GKLS5fMO3m2MvhpyZCeYQ4eAU4nTfWS
        2XN/wUu8SrxsNOyg2y2yhYc3NnXbJT4M2tqXZrJaGt7l2v0GKUeltKuVUegbND1fNYYVzSx1fMOvpKIV
        3dXdbQrzFZHyln8STUB3nhma7OQAu14VadisueZ24yAA50hCfWHGeGkYktY5GUIVxgufCrfN4GO+2OKj
        82eC6wDjy2Y2tyihbbVyi/EnRUrCthY3FbZGu02o8DWvgzSxBccN4Z+FWycY09UhCWAIhlcueJZ9CNqj
        mjmWqdhyJPw23YmZ0ltpyW/EfeCyTwSjw6iswsdvxnH8P4feQq7rQRJkf2dvbUOKiP7U+YVlPiu1w4sD
        B0yGm3XKM2eR0O01OHFTravyzQIPq+ohI11ArFWJ5GYE19iNLdawvHc2AlsltVycR5Sln5kUbZEQYy4g
        NvkRSTGkQ9GnWegjik+cGrTmZiO16N3u1/dZj88twCJH22FkA/Zq25q4FuSmmBekRJC+LM1C4qkn0EuA
        Jpi526UUhmdGcKiAA28hWpPQa06amXi0wB8ruUSMBxL76G/5jU/N7BUbVEOTJu0gHTkbewp3/vVsoq84
        xxpiPba5VFggK4tRV8tNWPQp3gj7NRIcS3sBiIwlloHXQbyo/lKJ3qNXS2ousUMhZakNrDkV9G5bLyd6
        VJNZc4sXi3C8aY+AmcwtUWcgeaQz3hv9X82b29ZsD3IR17MqetuAyfQZJ0X/ANlMxWYLLUVkaNR0BpHQ
        ndr0nifDiBtEuw3Rt5PKJTEdWna37KkJ2gRrTeSzcnDNkvlgbZlyZNqiuyIExWiHVuICipl0EbCqwFl3
        ZcVPS2rlfp0C4xniZVjZC2FsaHTXV4rKhWPMC4Sw/izCkC22vYDjMmVKU68t4vbHkBQWa2lBAQDso8yU
        /FH+g8I3EGsk9pqXjpsD5OLsgo9G2Unb9VBmXgVQ3YptPWU14ycBhJ/Cm1dZFDMvAh4YptPWU0rMjAiQ
        BzotPWkUczMCbhzptXWBQzNwH+lNq6wKGZmBP0ptPWU0jMvAXmxRausCjmZgTQ/hRaespprH+C3/ACMU
        WfrjY40MaYQCVHnNZ+utVnFiTDd0wmwYV+tsh2HdIkostSULcWhBKDsgUtSFqK0K2kL+Mk+lKt4PhxI6
        GMO3df6qpHtCE1hOIIeG7FFIAMe2xWlADQaobFY7wOb4hm62p74DiWCNuFMR8Ur2N/Iu+lC6vuIDinEO
        ELouNyDrliltvtfNPsvKQ4P6EuWxb4r8t9YS0ygrJPnI8lPSTWVWPcBYewtpcsRNNXOfNemTEFp07Liz
        sgUM3MuF7k4mi/tQ4n+KaXmvl6U7ZxNA06VUvN3LrQE4mibP1Bzu0vOLLZGyDiZj7LTyv4JpWc+WaNRz
        kR1Z/uV48ss/p9XU3+5Rz0y0+nF9Tfrx45Z/Ti+pv92vHplr9OL6m/3a8eGWQA/r89Tf7lDPTLQ8b6vq
        b/do55ZZ/Ty+pv8Adrx45Zq01v56m/3KOdOWR11xIjqz/co545abex93j1R/uUM78sylZ5w8P1R/uUc6
        8skqA5xDqr/coZ0ZZKKhzjR1Z/uU3nNlksH8JUDfpvjP9ykZ0ZZrKk840DQ6b4z/AHKRm9ltruxNGPSh
        0D+SvGjgINqVzotntqbzIwM4sNjFNoB/5pAFHMfArRUg4ptII/WUGjmlgEIC+c9s0I+epWcGW2uhxNH9
        m73KOdGWQUhPONG/9Wf7lLznyyRpriRHVn+5RzoyyBSOcierP9ykZ1ZZLJHOMdVf7leO7LL4h5w+V+qP
        9yk55ZZrXp93lD/KP92vHRln8T8JEdWf7lePDLIf+vK6m/3KGeWWX06vqb/drx55aDhfV9Tf7tePHLP6
        fPU3+5Xj0y0+nF9Tfrx55afTq+pv92vHnlmrjfF9Tfo55ZZkDW/nqb/cpOcuWS9Bzlb6u/3KTnRlmrX8
        JEdWf7lOZ3ZZoGvODXoiP9ykZ5ZaL435SOmI/wB2kZ3ZZugk4h2emI/3K8dmWZb2ziMdVf7lIzsyzXqO
        cYHTFf7lN51ZZL385Ep6Yr/coZ05ZbaUc5E9Vf7lHOXLPTfiZrq7/cpGdeWbyNo4jCfqMV/uV44MtfPi
        dj2T3dpnNrLt3QN4mhfb22/5k0cz8B8mV86bX7ejmbgTZ1GKbV1gUjH+CC2FJxVZ+uN0MzMCHhim1dYF
        DM/ASmyRie17I8xfpzNfL1jQHE8D7BUv+UV44stSEjnMx7J7u05nPlm2hZ5yIOz6Iz/cpvObLJbYVzlQ
        OmM/3KOdGWSF7HORHSIz/cpWdGWKE685EHoiv9yjnVliEJPOMdVf7lJzqyzWCecYH+Vf7leO3LINBXOH
        9giP9yjnjlnok/d49Uf7lN535ZODffyjpiP92jnRlmlGvONHVn+5TuduWTZA5xa9ER/uUc8ss/p89Tf7
        lePLLM8b6vqb/drx45ZfTyupv9yhnplp9Or6m/Qzwyy2Vf1+eqP9yjnnln9Or6m/Qzyyz+nF9Tfrx6Za
        fTq+pv8Ado56ZafTi+pv0M8cs/p1fU3+5Xjyyz+n1dTf7lDCuFR/7ctPU2qOFcKkAc3LT1NquaeE/wBH
        LT1VFc08J/o5auqormnhP9HLV1RFc1cK6ac3LV1Nqua+F9nZ5u2rT/k2uyjhPCihocOWrqjYrmjhI8cN
        2vqqKVgvB6tdcOW7eNNzIFDA2DE66YcgfuE0nBODUpCebdvI38W9++p9rueC0lDjL06xJJ5CU0Nt+Kk8
        G30ecDzKpi+WSUElm6xFagEAuhCv9FaVKvllhBZfucVJTxSlwLX+6nWrXaLjmVJm2m3KNviwiw9LlSm9
        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
</value>
  </data>
</root>